1일차

배운내용정리
commit: git에서 생성된 각 버전 , 버전관리를 위해 만들어진 파일 그 행위
git init:이 명령어를 통해 로컬 저장소를 만든다. (git초기화과정)
git config --global user.email" " :깃허브의 계정정보를 입력하는것
git config --global user.name" " :깃허브의 계정정보를 입력하는것
git add "파일": 파일을 커밋함
git commit -m "설명": 커밋에 상세설명을 적는것 왜 만들었는지 왜 수정했는지 그리고 체크포인트로 쓸 수 있음
-m은 meassage의 약자
git log : 지금까지 만든 커밋을 확인가능 마지막에 만든게 제일 위에 있다.

git checkout /커밋 아이디 7자(전부다도 가능)/:커밋 아이디의 커밋으로 돌아가는기능 undo랑 비슷하려나? 커밋 아이디 자리에 - 입력시 최신커밋으로 이동

원격저장소를 repository라고 부름 웹사이트에 공용폴더라고 생각하슈

git remote add origin /원격저장소 주소/ : 원격저장소 주소 설정
git push origin master:원격저장소에 커밋 올리기
git clone /원격저장소주소/ .: 원격저장소에 올려진 로컬저장소 받기 (만약 . 를 붙히지 않으면 폴더안데 새로은 폴더가 생기고 그 폴더안에 git.폴더와 파일이 생김)
git pull origin master :원격저장소의 새로운 커밋을 받음
ㄴ git pull 오류 Your local changes to the following files would be overwritten by merge: 
 	내가 수정한 파일을 다른사람이 push한 경우 해당 파일에 충돌이 발생한다는 것.
	stash현재 디렉토리의 파일을 임시로 백업하고 깨끗한 상태로 돌립니다.

	git stash:해당 명령어를 통해 현재 Staging 영역에 있는 파일의 변경사항을 스택에 넣어둔다

​	git pull origin 브랜치명:pull을 사용해서 원격 저장소에서 내 로컬 브랜치로 변경사항을 적용한다



	git stash pop:변경 사항을 적용하고, 스택에서 제거 한다.
[출처] [깃 오류 해결 Your local changes to the following files would be overwritten by merge]|작성자 걷지 않는 개발자
스택이 뭐지 자료구조인가?
++remote origin already exists. 에러
깃의 Remote origin already exists 에러는 기존에 연결되어 있는 레파지토리가 다시 새로운 레파지토리에 소스코드를 올리려고 하면 발생되는 에러입니다.
git remote remove origin 명령어를 입력해서 기존에 연결되어 있는 원격 저장소와의 연결을 끊어줍니다.

 


2. git remote add origin [새롭게 연결할 깃 레파지토리 주소] 명령어를 입력합니다.

 


3. git remote -v 명령어를 입력해서 로컬 저장소를 원격 저장소에 연결시켜줍니다.

 


4. git push origin master 명령어를 입력해서 소스코드를 올리면 됩니다.
[
[출처] git Remote origin already exists 에러|작성자 3tjsgh
